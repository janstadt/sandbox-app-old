{"version":3,"file":"surescripts-left-navigation.js","sources":["ng://@surescripts/left-navigation/lib/left-navigation.service.ts","ng://@surescripts/left-navigation/lib/left-navigation.component.ts","ng://@surescripts/left-navigation/lib/nav-item.model.ts","ng://@surescripts/left-navigation/lib/left-navigation.module.ts"],"sourcesContent":["import { Injectable, Output, EventEmitter, NgModule } from '@angular/core';\r\nimport { NavItem, NavHeading } from './nav-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@NgModule()\r\nexport class LeftNavigationService {\r\n    @Output() items: EventEmitter<Array<NavItem>> = new EventEmitter();\r\n    @Output() toggle: EventEmitter<boolean> = new EventEmitter();\r\n    @Output() header: EventEmitter<NavHeading> = new EventEmitter();\r\n    @Output() displayFooter: EventEmitter<boolean> = new EventEmitter();\r\n    collapsed = false;\r\n    init(header?: NavHeading, items?: Array<NavItem>, displayFooter?: boolean) {\r\n        if (displayFooter === null || displayFooter === undefined) {\r\n            displayFooter = true;\r\n        }\r\n        this.header.emit(header);\r\n        this.items.emit(items);\r\n        this.displayFooter.emit(displayFooter);\r\n        this.toggle.subscribe((collapsed: boolean) => { this.collapsed = collapsed; });\r\n    }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { NavItem, NavHeading, NavItemLink } from './nav-item.model';\r\nimport { LeftNavigationService } from './left-navigation.service';\r\n// import { faChevronLeft, faChevronRight, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport {  Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'surescripts-left-navigation',\r\n    templateUrl: './left-navigation.component.html'\r\n})\r\nexport class LeftNavigationComponent {\r\n    // faChevronLeft: IconDefinition = faChevronLeft;\r\n    // faChevronRight: IconDefinition = faChevronRight;\r\n    items: Array<NavItem>;\r\n    header: NavHeading;\r\n    collapsed = false;\r\n    displayNav = false;\r\n    displayFooter = true;\r\n    @Input()\r\n    highlightLinks = true;\r\n\r\n    constructor(private leftNavService: LeftNavigationService, private router: Router) {\r\n        this.leftNavService.displayFooter.subscribe((display: boolean) => {\r\n            this.displayFooter = display;\r\n        });\r\n\r\n        this.leftNavService.items.subscribe((items: Array<NavItem>) => {\r\n            if (items && items.length > 0) {\r\n                this.items = items;\r\n                this.displayNav = true;\r\n            } else {\r\n                this.displayNav = false;\r\n            }\r\n        });\r\n\r\n        this.leftNavService.header.subscribe((header: NavHeading) => {\r\n            if (header) {\r\n                this.header = header;\r\n            }\r\n        });\r\n    }\r\n\r\n    public isLinkActive(item: NavItemLink) {\r\n        const charPos = this.router.url.indexOf('?');\r\n        if (charPos > -1 && !item.queryParams) {\r\n            return false;\r\n        }\r\n        else if (item.queryParams) {\r\n            if (charPos === -1) {\r\n                return false;\r\n            }\r\n            const tree = this.router.createUrlTree([item.url], { queryParams: item.queryParams });\r\n            return this.router.url.startsWith(tree.toString());\r\n        }\r\n\r\n        const cleanUrl = charPos !== -1 ? this.router.url.slice(0, charPos) : this.router.url;\r\n        return cleanUrl === item.url;\r\n    }\r\n\r\n    toggle() {\r\n        this.collapsed = !this.collapsed;\r\n        this.leftNavService.toggle.emit(this.collapsed);\r\n    }\r\n}\r\n","import { noop } from 'rxjs';\r\n\r\nexport class NavItemIcon {\r\n    prefix: string;\r\n    name: string;\r\n    public constructor(init?: Partial<NavItemIcon>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum NavItemType {\r\n    Link = 'link',\r\n    Heading = 'heading',\r\n    HR = 'hr',\r\n    Function = 'fn'\r\n}\r\n\r\nexport class NavItemLink {\r\n    relative ? = true;\r\n    url: string;\r\n    target ? = '_self';\r\n    queryParams ?: {\r\n        [k: string]: any;\r\n    };\r\n    public constructor(init?: Partial<NavItemLink>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class NavItem {\r\n    text: string;\r\n    itemType: NavItemType;\r\n    icon: NavItemIcon;\r\n    link: NavItemLink;\r\n    onClick:  ($event: any) => void = noop;\r\n    selected: boolean;\r\n    id: string;\r\n    public constructor(init?: Partial<NavItem>) {\r\n        if (init) {\r\n            init.icon = new NavItemIcon(init.icon);\r\n            if (init.itemType === NavItemType.Function) {\r\n                init.link = undefined;\r\n                init.onClick = init.onClick || noop;\r\n            } else if (init.itemType === NavItemType.Link) {\r\n                init.onClick = undefined;\r\n                init.link = new NavItemLink(init.link);\r\n            }\r\n        }\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class NavHeading {\r\n    icon: NavItemIcon;\r\n    title: string;\r\n    public constructor(init?: Partial<NavItem>) {\r\n        if (init) {\r\n            init.icon = new NavItemIcon(init.icon);\r\n        }\r\n        Object.assign(this, init);\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { LeftNavigationComponent } from './left-navigation.component';\r\nimport { LeftNavigationService } from './left-navigation.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FontAwesomeModule, RouterModule],\r\n  declarations: [LeftNavigationComponent],\r\n  exports: [LeftNavigationComponent]\r\n})\r\nexport class LeftNavigationModule {\r\n  constructor(library: FaIconLibrary) {\r\n    library.addIcons(faChevronLeft, faChevronRight);\r\n  }\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: LeftNavigationModule,\r\n      providers: [ LeftNavigationService ]\r\n    };\r\n  }\r\n}\r\n\r\nexport { NavHeading, NavItem, NavItemType, NavItemLink } from './nav-item.model';\r\nexport { LeftNavigationService } from './left-navigation.service';\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;QAQI,aAAgD,IAAI,YAAY,EAAE,CAAC;QACnE,cAA0C,IAAI,YAAY,EAAE,CAAC;QAC7D,cAA6C,IAAI,YAAY,EAAE,CAAC;QAChE,qBAAiD,IAAI,YAAY,EAAE,CAAC;QACpE,iBAAY,KAAK,CAAC;;;;;;;;IAClB,oCAAI;;;;;;IAAJ,UAAK,MAAmB,EAAE,KAAsB,EAAE,aAAuB;QAAzE,iBAQC;QAPG,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;YACvD,aAAa,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,SAAkB,IAAO,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;KAClF;;gBAlBJ,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;gBACA,QAAQ;;;wBAEJ,MAAM;yBACN,MAAM;yBACN,MAAM;gCACN,MAAM;;;gCAXX;;;;;;;ACAA;IAqBI,iCAAoB,cAAqC,EAAU,MAAc;QAAjF,iBAmBC;QAnBmB,mBAAc,GAAd,cAAc,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;QANjF,iBAAY,KAAK,CAAC;QAClB,kBAAa,KAAK,CAAC;QACnB,qBAAgB,IAAI,CAAC;QACrB,sBACiB,IAAI,CAAC;QAGlB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,OAAgB;YACzD,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,KAAqB;YACtD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACH,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAkB;YACpD,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACxB;SACJ,CAAC,CAAC;KACN;;;;;IAEM,8CAAY;;;;cAAC,IAAiB;;QACjC,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnC,OAAO,KAAK,CAAC;SAChB;aACI,IAAI,IAAI,CAAC,WAAW,EAAE;YACvB,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;gBAChB,OAAO,KAAK,CAAC;aAChB;;YACD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACtF,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACtD;;QAED,IAAM,QAAQ,GAAG,OAAO,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACtF,OAAO,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC;;;;;IAGjC,wCAAM;;;IAAN;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACnD;;gBAxDJ,SAAS,SAAC;oBACP,QAAQ,EAAE,6BAA6B;oBACvC,koGAA+C;iBAClD;;;;gBAPQ,qBAAqB;gBAEpB,MAAM;;;iCAcX,KAAK;;kCAlBV;;;;;;;ACAA,AAEA,IAAA;yBAGuB,IAA2B;QAC1C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;sBANlC;IAQC,CAAA;AAND;;IASI,MAAO,MAAM;IACb,SAAU,SAAS;IACnB,IAAK,IAAI;IACT,UAAW,IAAI;;IAGnB;yBAOuB,IAA2B;QAN9C,gBAAa,IAAI,CAAC;QAElB,cAAW,OAAO,CAAC;QAKf,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;sBAzBlC;IA2BC,CAAA;AAVD,IAYA;qBAQuB,IAAuB;QAH1C,eAAkC,IAAI,CAAC;QAInC,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,EAAE;gBACxC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;aACvC;iBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,IAAI,EAAE;gBAC3C,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1C;SACJ;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;kBAhDlC;IAkDC,CAAA;AArBD,IAuBA;wBAGuB,IAAuB;QACtC,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;qBA3DlC;IA6DC;;;;;;AC7DD;IAcE,8BAAY,OAAsB;QAChC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;KACjD;;;;IACM,4BAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE,CAAE,qBAAqB,CAAE;SACrC,CAAC;KACH;;gBAdF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,YAAY,CAAC;oBACxD,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC;;;;gBAR2B,aAAa;;+BAJzC;;;;;"}